<%#
kind: provision
name: Kickstart KUMO default
oses:
- RedHat 4
- RedHat 5
- RedHat 6
- RedHat 7
%>
<%#
This template accepts the following parameters:
- lang: string (default="en_US.UTF-8")
- selinux: string (default="enforcing")
- keyboard: string (default="us")
- time-zone: string (default="UTC")
- http-proxy: string (default="")
- http-proxy-port: string (default="")
- force-puppet: boolean (default=false)
- enable-puppetlabs-repo: boolean (default=false)
- salt_master: string (default=undef)
- ntp-server: string (default="0.fedora.pool.ntp.org")
- bootloader-append: string (default="nofb quiet splash=quiet")
%>
<%
  os_major = @host.operatingsystem.major.to_i
  # safemode renderer does not support unary negation
  pm_set = @host.puppetmaster.empty? ? false : true
  proxy_uri = @host.params['http-proxy'] ? "http://#{@host.params['http-proxy']}:#{@host.params['http-proxy-port']}" : nil
  proxy_string = proxy_uri ? " --proxy=#{proxy_uri}" : ''
  puppet_enabled = false  #pm_set || @host.param_true?('force-puppet')
  salt_enabled = @host.params['salt_master'] ? true : false
  section_end = os_major <= 5 ? '' : '%end'
%>
install
<%= @mediapath %><%= proxy_string %>
lang <%= @host.params['lang'] || 'en_US.UTF-8' %>
selinux --<%= @host.params['selinux'] || 'enforcing' %>
keyboard <%= @host.params['keyboard'] || 'us' %>
skipx

<% subnet = @host.subnet -%>
<% if subnet.respond_to?(:dhcp_boot_mode?) -%>
  <% dhcp = subnet.dhcp_boot_mode? && !@static -%>
<% else -%>
  <% dhcp = !@static -%>
<% end -%>
network --bootproto <%= dhcp ? 'dhcp' : "static --ip=#{@host.ip} --netmask=#{subnet.mask} --gateway=#{subnet.gateway} --nameserver=#{[subnet.dns_primary, subnet.dns_secondary].select(&:present?).join(',')}" %> --hostname <%= @host %><%= os_major >= 6 ? " --device=#{@host.mac}" : '' -%>

rootpw --iscrypted <%= root_pass %>
firewall --<%= os_major >= 6 ? 'service=' : '' %>ssh
authconfig --useshadow --passalgo=sha256 --kickstart
timezone America/New_York

<% if os_major >= 7 && @host.info['parameters']['realm'] && @host.realm && @host.realm.realm_type == 'Active Directory' -%>
# One-time password will be requested at install time. Otherwise, $HOST[OTP] is used as a placeholder value.
realm join --one-time-password=<%= @host.otp || "$HOST[OTP]" %> <%= @host.realm %>
<% end -%>

<% if os_major > 4 -%>
services --disabled gpm,sendmail,cups,pcmcia,isdn,rawdevices,hpoj,bluetooth,openibd,avahi-daemon,avahi-dnsconfd,hidd,hplip,pcscd

<% if puppet_enabled && @host.param_true?('enable-puppetlabs-repo') -%>
repo --name=puppetlabs-products --baseurl=http://yum.puppetlabs.com/el/<%= @host.operatingsystem.major %>/products/<%= @host.architecture %><%= proxy_string %>
repo --name=puppetlabs-deps --baseurl=http://yum.puppetlabs.com/el/<%= @host.operatingsystem.major %>/dependencies/<%= @host.architecture %><%= proxy_string %>
<% end -%>
<% end -%>

bootloader --location=mbr --append="<%= @host.params['bootloader-append'] || 'nofb quiet splash=quiet' %>" <%= grub_pass %>
<% if os_major == 5 -%>
key --skip
<% end -%>


<% if @dynamic -%>
%include /tmp/diskpart.cfg
<% else -%>
<%= @host.diskLayout %>
<% end -%>

text
reboot

%packages
@Core
bind-utils
deltarpm
dhclient
hdparm
mailx
mc
net-tools
ntp
smartmontools
strace
tcpdump
traceroute
vim
yum
yum-utils
<% if os_major >= 6 -%>
redhat-lsb-core
<% end -%>
<% if puppet_enabled && @host.param_true?('enable-puppetlabs-repo') -%>
puppetlabs-release
<% end -%>
<% if salt_enabled %>
salt-minion
<% end -%>
<%= section_end -%>

<% if @dynamic -%>
%pre
<%= @host.diskLayout %>
<%= section_end -%>
<% end -%>

%post --nochroot
exec < /dev/tty3 > /dev/tty3
#changing to VT 3 so that we can see whats going on....
/usr/bin/chvt 3
(
cp -va /etc/resolv.conf /mnt/sysimage/etc/resolv.conf
/usr/bin/chvt 1
) 2>&1 | tee /mnt/sysimage/root/install.postnochroot.log
<%= section_end -%>

%post
logger "Starting anaconda <%= @host %> postinstall"
exec < /dev/tty3 > /dev/tty3
#changing to VT 3 so that we can see whats going on....
/usr/bin/chvt 3
(
<% if subnet.respond_to?(:dhcp_boot_mode?) -%>
<%= snippet 'kumostack_networking_setup' %>
<% end -%>

#update local time
echo "updating system time"
/usr/sbin/ntpdate -sub <%= @host.params['ntp-server'] || '0.fedora.pool.ntp.org' %>
/usr/sbin/hwclock --systohc

mkdir /root/.ssh 
cat <<EOF > /root/.ssh/authorized_keys
<%= @host.params['ssh-keys'] %>
EOF
chmod 700 /root/.ssh
chmod 600 /root/.ssh/authorized_keys

cat >> /etc/sysctl.conf <<EOF
fs.file-max = 100000
EOF

cat >> /etc/security/limits.conf <<EOF
*      soft nproc 10000
*      hard nproc 10000
*      soft nofile 10000
*      hard nofile 10000
EOF

echo "Setting local repos and updating..."
grep -i 'red hat' /etc/redhat-release &&
	curl http://repos/repos/rhel7local.repo -o /etc/yum.repos.d/rhel7local.repo 
grep -i 'centos' /etc/redhat-release &&
	curl http://repos/repos/centos7local.repo -o /etc/yum.repos.d/centos7local.repo &&
	rm -rf /etc/yum.repos.d/Cent*

curl http://repos/repos/sensulocal.repo -o /etc/yum.repos.d/sensulocal.repo

<% if proxy_uri -%>
# Yum proxy
echo 'proxy = <%= proxy_uri %>' >> /etc/yum.conf
<% end -%>

# enable openstack repository
yum-config-manager --enable rhel-7-server-openstack-<%= @host.params['rhel-osp-version'] %>{,-tools,-optools}-rpms-local

# update all the base packages from the updates repository
yum -y -e 0 update

# install Director required packages
yum -y -e 0  install python-heat-agent\*

useradd -c 'Director user' stack
install -d -m 700 -o stack -g stack /home/stack/.ssh
install -m 600 -o stack -g stack /dev/null /home/stack/.ssh/authorized_keys
cat > /home/stack/.ssh/authorized_keys <<EOF
<%= @host.params['ssh-keys'] %>
<%= @host.params['undercloud-ssh-keys'] %>
EOF

install -m 440 -o root -g root /dev/null /etc/sudoers.d/stack
cat > /etc/sudoers.d/stack <<EOF
stack ALL = NOPASSWD: ALL
EOF

cat > /etc/sysconfig/network-scripts/route-eth2 <<EOF
192.168.24.1 via 172.16.1.1 metric 1000
EOF

sed -i '/wheel/d' /etc/sudoers
sed -i '/Defaults    requiretty/d' /etc/sudoers
echo '%wheel  ALL=(ALL)       NOPASSWD: ALL'  >> /etc/sudoers.d/wheel

if ! grep -q radonm /etc/aliases; then
	echo root: radonm@bu.edu >> /etc/aliases
	newaliases
fi

if [ "`dmidecode |grep 'PowerEdge R730'`" ]; then
  curl -O repos/misc/perccli_7.3-007.0318_linux.tar.gz
  tar -xzvf perccli_7.3-007.0318_linux.tar.gz
  yum -y -e 0 install perccli_7.3-007.0318_linux/Linux/perccli-007.0318.0000.0000-1.noarch.rpm
  echo '*/5 * * * *     root   [ "`/opt/MegaRAID/perccli/perccli64 show | tail -n 12|head -n1|cut -d " " -f 41`" == "Opt" ] || echo `/opt/MegaRAID/perccli/perccli64 show` | mail -s "Check raid on `hostname`" root' > /etc/cron.d/checkraid
  echo '*/5 * * * *     root   [ "`/opt/MegaRAID/perccli/perccli64 show | tail -n 12|head -n1|cut -d " " -f 29`" == "Msng" ] ||  [ "`/opt/MegaRAID/perccli/perccli64 show | tail -n 12|head -n1|cut -d " " -f 29`" == "Opt" ]  || echo `/opt/MegaRAID/perccli/perccli64 show` | mail -s "Check raid on `hostname`" root' >> /etc/cron.d/checkraid
fi

sed -i 's|PasswordAuthentication yes|PasswordAuthentication no|g' /etc/ssh/sshd_config

<%= snippet 'redhat_register' %>

<% if @host.info['parameters']['realm'] && @host.realm && @host.realm.realm_type == 'FreeIPA' -%>
<%= snippet 'freeipa_register' %>
<% end -%>

<% if puppet_enabled %>
# add the puppet package
yum -t -y -e 0 install puppet

echo "Configuring puppet"
cat > /etc/puppet/puppet.conf << EOF
<%= snippet 'puppet.conf' %>
EOF

 Setup puppet to run on system reboot
systemctl enable puppet

/usr/bin/puppet agent --config /etc/puppet/puppet.conf -o --tags no_such_tag <%= @host.puppetmaster.blank? ? '' : "--server #{@host.puppetmaster}" %> --no-daemonize
<% end -%>

<% if salt_enabled %>
cat > /etc/salt/minion << EOF
<%= snippet 'saltstack_minion' %>
EOF
# Setup salt-minion to run on system reboot
/sbin/chkconfig --level 345 salt-minion on
# Running salt-call to trigger key signing
salt-call --no-color --grains >/dev/null
<% end -%>

sync

# Inform the build system that we are done.
echo "Informing Foreman that we are built"
curl -sf -o /dev/null -k <%= foreman_url('built') %>
) 2>&1 | tee /root/install.post.log
exit 0

<%= section_end -%>
